<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zlb.product.dao.ProductCashSaleMapper">
  <resultMap id="BaseResultMap" type="com.zlb.product.domain.ProductCashSale">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="library_id" jdbcType="BIGINT" property="libraryId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="source" jdbcType="INTEGER" property="source" />
    <result column="classify_id" jdbcType="INTEGER" property="classifyId" />
    <result column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="model_id" jdbcType="INTEGER" property="modelId" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="sale_count" jdbcType="BIGINT" property="saleCount" />
    <result column="views_count" jdbcType="BIGINT" property="viewsCount" />
    <result column="verify" jdbcType="TINYINT" property="verify" />
    <result column="spec" jdbcType="VARCHAR" property="spec" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="purchase_quantity" jdbcType="INTEGER" property="purchaseQuantity" />
    <result column="weight" jdbcType="VARCHAR" property="weight" />
    <result column="shelf_life" jdbcType="VARCHAR" property="shelfLife" />
    <result column="industry" jdbcType="VARCHAR" property="industry" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="del" jdbcType="TINYINT" property="del" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zlb.product.domain.ProductCashSale">
    <result column="vendor_describe" jdbcType="LONGVARCHAR" property="vendorDescribe" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, library_id, code, name, source, classify_id, brand_id, model_id, pid, sale_count, 
    views_count, verify, spec, unit, purchase_quantity, weight, shelf_life, industry, 
    company_id, member_id, create_time, update_time, del
  </sql>
  <sql id="Blob_Column_List">
    vendor_describe
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zlb.product.domain.ProductCashSaleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_product_cash_sale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zlb.product.domain.ProductCashSaleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_product_cash_sale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_product_cash_sale
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_product_cash_sale
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zlb.product.domain.ProductCashSaleExample">
    delete from tb_product_cash_sale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zlb.product.domain.ProductCashSale">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_product_cash_sale (library_id, code, name, 
      source, classify_id, brand_id, 
      model_id, pid, sale_count, 
      views_count, verify, spec, 
      unit, purchase_quantity, weight, 
      shelf_life, industry, company_id, 
      member_id, create_time, update_time, 
      del, vendor_describe)
    values (#{libraryId,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{source,jdbcType=INTEGER}, #{classifyId,jdbcType=INTEGER}, #{brandId,jdbcType=INTEGER}, 
      #{modelId,jdbcType=INTEGER}, #{pid,jdbcType=BIGINT}, #{saleCount,jdbcType=BIGINT}, 
      #{viewsCount,jdbcType=BIGINT}, #{verify,jdbcType=TINYINT}, #{spec,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, #{purchaseQuantity,jdbcType=INTEGER}, #{weight,jdbcType=VARCHAR}, 
      #{shelfLife,jdbcType=VARCHAR}, #{industry,jdbcType=VARCHAR}, #{companyId,jdbcType=INTEGER}, 
      #{memberId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{del,jdbcType=TINYINT}, #{vendorDescribe,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zlb.product.domain.ProductCashSale">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_product_cash_sale
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="libraryId != null">
        library_id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="classifyId != null">
        classify_id,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="modelId != null">
        model_id,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="saleCount != null">
        sale_count,
      </if>
      <if test="viewsCount != null">
        views_count,
      </if>
      <if test="verify != null">
        verify,
      </if>
      <if test="spec != null">
        spec,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="purchaseQuantity != null">
        purchase_quantity,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="shelfLife != null">
        shelf_life,
      </if>
      <if test="industry != null">
        industry,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="del != null">
        del,
      </if>
      <if test="vendorDescribe != null">
        vendor_describe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="libraryId != null">
        #{libraryId,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=INTEGER},
      </if>
      <if test="classifyId != null">
        #{classifyId,jdbcType=INTEGER},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="modelId != null">
        #{modelId,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=BIGINT},
      </if>
      <if test="saleCount != null">
        #{saleCount,jdbcType=BIGINT},
      </if>
      <if test="viewsCount != null">
        #{viewsCount,jdbcType=BIGINT},
      </if>
      <if test="verify != null">
        #{verify,jdbcType=TINYINT},
      </if>
      <if test="spec != null">
        #{spec,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="purchaseQuantity != null">
        #{purchaseQuantity,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=VARCHAR},
      </if>
      <if test="shelfLife != null">
        #{shelfLife,jdbcType=VARCHAR},
      </if>
      <if test="industry != null">
        #{industry,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="del != null">
        #{del,jdbcType=TINYINT},
      </if>
      <if test="vendorDescribe != null">
        #{vendorDescribe,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zlb.product.domain.ProductCashSaleExample" resultType="java.lang.Long">
    select count(*) from tb_product_cash_sale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_product_cash_sale
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.libraryId != null">
        library_id = #{record.libraryId,jdbcType=BIGINT},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=INTEGER},
      </if>
      <if test="record.classifyId != null">
        classify_id = #{record.classifyId,jdbcType=INTEGER},
      </if>
      <if test="record.brandId != null">
        brand_id = #{record.brandId,jdbcType=INTEGER},
      </if>
      <if test="record.modelId != null">
        model_id = #{record.modelId,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=BIGINT},
      </if>
      <if test="record.saleCount != null">
        sale_count = #{record.saleCount,jdbcType=BIGINT},
      </if>
      <if test="record.viewsCount != null">
        views_count = #{record.viewsCount,jdbcType=BIGINT},
      </if>
      <if test="record.verify != null">
        verify = #{record.verify,jdbcType=TINYINT},
      </if>
      <if test="record.spec != null">
        spec = #{record.spec,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseQuantity != null">
        purchase_quantity = #{record.purchaseQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=VARCHAR},
      </if>
      <if test="record.shelfLife != null">
        shelf_life = #{record.shelfLife,jdbcType=VARCHAR},
      </if>
      <if test="record.industry != null">
        industry = #{record.industry,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.del != null">
        del = #{record.del,jdbcType=TINYINT},
      </if>
      <if test="record.vendorDescribe != null">
        vendor_describe = #{record.vendorDescribe,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tb_product_cash_sale
    set id = #{record.id,jdbcType=BIGINT},
      library_id = #{record.libraryId,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=INTEGER},
      classify_id = #{record.classifyId,jdbcType=INTEGER},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      model_id = #{record.modelId,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=BIGINT},
      sale_count = #{record.saleCount,jdbcType=BIGINT},
      views_count = #{record.viewsCount,jdbcType=BIGINT},
      verify = #{record.verify,jdbcType=TINYINT},
      spec = #{record.spec,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      purchase_quantity = #{record.purchaseQuantity,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=VARCHAR},
      shelf_life = #{record.shelfLife,jdbcType=VARCHAR},
      industry = #{record.industry,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      del = #{record.del,jdbcType=TINYINT},
      vendor_describe = #{record.vendorDescribe,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_product_cash_sale
    set id = #{record.id,jdbcType=BIGINT},
      library_id = #{record.libraryId,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=INTEGER},
      classify_id = #{record.classifyId,jdbcType=INTEGER},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      model_id = #{record.modelId,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=BIGINT},
      sale_count = #{record.saleCount,jdbcType=BIGINT},
      views_count = #{record.viewsCount,jdbcType=BIGINT},
      verify = #{record.verify,jdbcType=TINYINT},
      spec = #{record.spec,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      purchase_quantity = #{record.purchaseQuantity,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=VARCHAR},
      shelf_life = #{record.shelfLife,jdbcType=VARCHAR},
      industry = #{record.industry,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      del = #{record.del,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zlb.product.domain.ProductCashSale">
    update tb_product_cash_sale
    <set>
      <if test="libraryId != null">
        library_id = #{libraryId,jdbcType=BIGINT},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="classifyId != null">
        classify_id = #{classifyId,jdbcType=INTEGER},
      </if>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="modelId != null">
        model_id = #{modelId,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=BIGINT},
      </if>
      <if test="saleCount != null">
        sale_count = #{saleCount,jdbcType=BIGINT},
      </if>
      <if test="viewsCount != null">
        views_count = #{viewsCount,jdbcType=BIGINT},
      </if>
      <if test="verify != null">
        verify = #{verify,jdbcType=TINYINT},
      </if>
      <if test="spec != null">
        spec = #{spec,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="purchaseQuantity != null">
        purchase_quantity = #{purchaseQuantity,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=VARCHAR},
      </if>
      <if test="shelfLife != null">
        shelf_life = #{shelfLife,jdbcType=VARCHAR},
      </if>
      <if test="industry != null">
        industry = #{industry,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="del != null">
        del = #{del,jdbcType=TINYINT},
      </if>
      <if test="vendorDescribe != null">
        vendor_describe = #{vendorDescribe,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zlb.product.domain.ProductCashSale">
    update tb_product_cash_sale
    set library_id = #{libraryId,jdbcType=BIGINT},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      source = #{source,jdbcType=INTEGER},
      classify_id = #{classifyId,jdbcType=INTEGER},
      brand_id = #{brandId,jdbcType=INTEGER},
      model_id = #{modelId,jdbcType=INTEGER},
      pid = #{pid,jdbcType=BIGINT},
      sale_count = #{saleCount,jdbcType=BIGINT},
      views_count = #{viewsCount,jdbcType=BIGINT},
      verify = #{verify,jdbcType=TINYINT},
      spec = #{spec,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      purchase_quantity = #{purchaseQuantity,jdbcType=INTEGER},
      weight = #{weight,jdbcType=VARCHAR},
      shelf_life = #{shelfLife,jdbcType=VARCHAR},
      industry = #{industry,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=INTEGER},
      member_id = #{memberId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      del = #{del,jdbcType=TINYINT},
      vendor_describe = #{vendorDescribe,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zlb.product.domain.ProductCashSale">
    update tb_product_cash_sale
    set library_id = #{libraryId,jdbcType=BIGINT},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      source = #{source,jdbcType=INTEGER},
      classify_id = #{classifyId,jdbcType=INTEGER},
      brand_id = #{brandId,jdbcType=INTEGER},
      model_id = #{modelId,jdbcType=INTEGER},
      pid = #{pid,jdbcType=BIGINT},
      sale_count = #{saleCount,jdbcType=BIGINT},
      views_count = #{viewsCount,jdbcType=BIGINT},
      verify = #{verify,jdbcType=TINYINT},
      spec = #{spec,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      purchase_quantity = #{purchaseQuantity,jdbcType=INTEGER},
      weight = #{weight,jdbcType=VARCHAR},
      shelf_life = #{shelfLife,jdbcType=VARCHAR},
      industry = #{industry,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=INTEGER},
      member_id = #{memberId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      del = #{del,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>